{"version":3,"sources":["spacex-logo.jpg","components/launchItem.js","components/missionKey.js","components/launches.js","components/launchVideo.js","components/launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","Link","to","concat","missionKey","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","react_apollo_browser_umd","query","loading","error","data","console","log","launches","map","Component","LaunchVideo","video","mission","videoSrc","substring","title","width","height","src","LAUNCH_QUERY","launch_templateObject","Launch","props","match","params","parseInt","variables","_data$launch","launch_year","details","_data$launch$rocket","rocket","rocket_type","rocket_name","rocket_id","_data$launch$links","links","wikipedia","video_link","article_link","mission_patch_small","href","target","rel","launchVideo","client","ApolloClient","uri","App","BrowserRouter","logo","alt","style","display","margin","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sWCKzB,SAASC,EAATC,GAAmG,IAAAC,EAAAD,EAA7EE,OAAUC,EAAmEF,EAAnEE,cAAeC,EAAoDH,EAApDG,aAAcC,EAAsCJ,EAAtCI,kBAAmBC,EAAmBL,EAAnBK,eAC7F,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,sBAAe,IACfF,EAAAC,EAAAC,cAAA,QACEC,UAAWC,IAAW,CACpBC,eAAgBN,EAChBO,eAAgBP,KAGdF,IAGNG,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAQO,OAAO,oBAAqBV,KAE/CE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAE,WAAAC,OAAaf,GAAiBO,UAAU,qBAAhD,qBCrBK,SAASS,IACtB,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBADlB,qBAGAH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBADlB,uOCFN,IAAMU,EAAiBC,IAAHC,KAsCLC,EA3Bf,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEI,OACE5B,EAAAC,EAAAC,cAAC2B,EAAA,SAAD,KACE7B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,YACAH,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAAC4B,EAAA,MAAD,CAAOC,MAAOlB,GAEZ,SAAApB,GAA4B,IAA1BuC,EAA0BvC,EAA1BuC,QAASC,EAAiBxC,EAAjBwC,MAAOC,EAAUzC,EAAVyC,KAChB,OAAGF,EAAgBhC,EAAAC,EAAAC,cAAA,yBAChB+B,GAAOE,QAAQC,IAAIH,GACtBE,QAAQC,IAAIF,GACLlC,EAAAC,EAAAC,cAAC2B,EAAA,SAAD,KAEHK,EAAKG,SAASC,IAAI,SAAA3C,GAAM,OACtBK,EAAAC,EAAAC,cAACV,EAAD,CAAYmC,IAAKhC,EAAOC,cAAeD,OAAQA,eAfjEqB,EAAA,CAA8BuB,aCCdC,EAfI,SAAA/C,GAAwB,IAArBgD,EAAqBhD,EAArBgD,MAAOC,EAAcjD,EAAdiD,QAC7B,IAAID,EACH,OAAOzC,EAAAC,EAAAC,cAAA,yBAGR,IAAMyC,EAPS,iCAOYF,EAAMG,UAAU,IAC3C,OACC5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,sBAAgDuC,EAAhD,YACA1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,eAAeC,MAAM,MAAMC,OAAO,MAAMC,IAAKL,sfCL/D,IAAMM,EAAenC,IAAHoC,KAsHHC,EA/Ff,SAAAlC,GAAA,SAAAkC,IAAA,OAAAjC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,GAAAjC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAiC,EAAAlC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAiC,EAAA,EAAAxB,IAAA,SAAAC,MAAA,WACW,IACDhC,EAAkBwB,KAAKgC,MAAMC,MAAMC,OAAnC1D,cAEN,OADAA,EAAgB2D,SAAS3D,GAEvBI,EAAAC,EAAAC,cAAC2B,EAAA,SAAD,KACE7B,EAAAC,EAAAC,cAAC4B,EAAA,MAAD,CAAOC,MAAOkB,EAAcO,UAAW,CAAC5D,kBAEpC,SAAAH,GAA4B,IAA1BuC,EAA0BvC,EAA1BuC,QAASC,EAAiBxC,EAAjBwC,MAAOC,EAAUzC,EAAVyC,KAChB,GAAGF,EAAS,OAAOhC,EAAAC,EAAAC,cAAA,wBAChB+B,GAAOE,QAAQC,IAAIH,GAFI,IAAAwB,EAatBvB,EAAKvC,OARPE,EALwB4D,EAKxB5D,aACA6D,EANwBD,EAMxBC,YACA3D,EAPwB0D,EAOxB1D,eACAD,EARwB2D,EAQxB3D,kBACAF,EATwB6D,EASxB7D,cACA+D,EAVwBF,EAUxBE,QAVwBC,EAAAH,EAWxBI,OAASC,EAXeF,EAWfE,YAAaC,EAXEH,EAWFG,YAAaC,EAXXJ,EAWWI,UAXXC,EAAAR,EAYxBS,MAAQC,EAZgBF,EAYhBE,UAAWC,EAZKH,EAYLG,WAAYC,EAZPJ,EAYOI,aAAcC,EAZrBL,EAYqBK,oBAG/C,OACEtE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,YADF,IAC+CN,GAE/CG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,kBAAgDP,GAChDI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBAA8CuD,GAC9C1D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBAA6CH,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAQO,OAAO,oBAAqBV,IACjFE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,qBAAoD,IACnDH,EAAAC,EAAAC,cAAA,QACGC,UAAWC,IAAW,CACpBC,eAAgBN,EAChBO,eAAgBP,KAGjBA,EAAiB,MAAQ,OAG9BC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAkBH,EAAAC,EAAAC,cAAA,KAAGqE,KAAMJ,EACvCK,OAAO,SAASC,IAAI,uBADU,kBAIlCzE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,kBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,cAA4C6D,GAC5ChE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBAA8C2D,GAC9C9D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBAA8C4D,KAGhD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACwE,EAAD,CAAajC,MAAO2B,EAAY1B,QAAS7C,OAK7CG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAIyD,GACJ3D,EAAAC,EAAAC,cAAA,KAAGqE,KAAMF,EAAcG,OAAO,SAASC,IAAI,uBAA3C,4BAGJzE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,IAAIP,UAAU,qBAAvB,yBAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,0BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB6C,IAAKsB,gBAhFxDnB,EAAA,CAA4BZ,aCtBtBoC,SAAS,IAAIC,IAAa,CAC5BC,IAAK,cAmBMC,mLAdX,OACE9E,EAAAC,EAAAC,cAAC4B,EAAA,eAAD,CAAgB6C,OAAQA,GACtB3E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,KACE/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGqE,KAAK,KAAIvE,EAAAC,EAAAC,cAAA,OAAK8C,IAAKgC,IAAMC,IAAI,SAASC,MAAO,CAAEpC,MAAO,IAAKqC,QAAS,QAASC,OAAQ,WACxFpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYxE,IAClChB,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAYrC,cARjDZ,aCDEkD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvC,MACvB,2DCZNwC,IAASC,OAAO9F,EAAAC,EAAAC,cAAC6F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ab683de7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spacex-logo.f5d65c01.jpg\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function LaunchItem({ launch: { flight_number, mission_name, launch_date_local, launch_success }}) {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>Mission: { ' ' }\n          <span\n            className={classNames({\n              'text-success': launch_success,\n              'text-danger': !launch_success\n          })}\n          >\n              { mission_name }\n            </span>\n          </h4>\n          <p>Date: <Moment format=\"MM-DD-YYYY HH:mm\">{ launch_date_local }</Moment></p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function missionKey() {\n  return (\n    <div className=\"my-3\">\n      <p>\n        <span className=\"px-3 mr-2 bg-success\" /> = Launch Success\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\" /> = Launch Fail\n      </p>\n    </div>\n  )\n}\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './launchItem';\nimport MissionKey from './missionKey';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nexport class Launches extends Component {\n  render() {\n    return (\n      <Fragment>\n        <h1 className=\"display-4 my-3\">Launches</h1>\n        <MissionKey />\n        <Query query={LAUNCHES_QUERY}>\n        {\n          ({loading, error, data}) => {\n            if(loading) return <h4>Loading...</h4>\n            if(error) console.log(error);\n            console.log(data);\n            return <Fragment>\n              {\n                data.launches.map(launch => (\n                  <LaunchItem key={launch.flight_number} launch={launch}/>\n                ))\n              }\n            </Fragment>\n          }\n        }\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Launches\n","import React from 'react';\nconst baseURL = 'https://www.youtube.com/embed/';\n\nconst LaunchVideo = ({ video, mission }) => {\n\tif(!video) {\n\t\treturn <div>Loading...</div>;\n\t}\n\n\tconst videoSrc = baseURL + video.substring(32);\n\treturn (\n\t\t<div className=\"card mb-3\">\n\t\t\t<h4 className=\"card-header\">Official Video For {mission} Mission</h4>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<iframe title=\"video-player\" width=\"560\" height=\"315\" src={videoSrc} />\n\t\t\t</div>\n\t  </div>\n\t);\n};\n export default LaunchVideo;\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport classNames from 'classnames';\nimport LaunchVideo from './launchVideo';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      details\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n      links {\n        wikipedia\n        video_link\n        article_link\n        mission_patch_small\n      }\n    }\n  }\n`;\nexport class Launch extends Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n    return(\n      <Fragment>\n        <Query query={LAUNCH_QUERY} variables={{flight_number}}>\n          {\n            ({loading, error, data}) => {\n              if(loading) return <h4>Loading...</h4>\n              if(error) console.log(error);\n\n              const {\n                mission_name,\n                launch_year,\n                launch_success,\n                launch_date_local,\n                flight_number,\n                details,\n                rocket: {rocket_type, rocket_name, rocket_id },\n                links: {wikipedia, video_link, article_link, mission_patch_small}\n              } = data.launch;\n              \n              return(\n                <div>\n                <h1 className=\"display-4 my-3\">\n                  <span className=\"text-dark\">Mission:</span> {mission_name}\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col\">\n                  <ul className=\"list-group\">\n                    <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n                    <li className=\"list-group-item\">Launch Year: {launch_year}</li>\n                    <li className=\"list-group-item\">Launch Date: <Moment format=\"MM-DD-YYYY HH:mm\">{ launch_date_local }</Moment></li>\n                    <li className=\"list-group-item\">Launch Successful:{ ' ' }\n                     <span\n                        className={classNames({\n                          'text-success': launch_success,\n                          'text-danger': !launch_success\n                        })}\n                      >\n                        {launch_success ? 'Yes' : 'No'}\n                      </span>\n                    </li>\n                    <li className=\"list-group-item\"><a href={wikipedia}\n                      target=\"_blank\" rel=\"noopener noreferrer\">Mission Wiki</a>\n                    </li>\n                  </ul>\n                  <h4 className=\"my-3\">Rocket Details</h4>\n                  <ul className=\"list-group\">\n                    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                    <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n                    <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                  </ul>\n                  </div>\n                  <div className=\"col-md-auto\">\n                    <LaunchVideo video={video_link} mission={mission_name}/>\n                  </div>\n                  </div>\n                </div>\n\n                <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col\">\n                <div className=\"card mb-3\">\n                  <h4 className=\"card-header\">Mission Details</h4>\n                  <div className=\"card-body\">\n                    <p>{details}</p>\n                    <a href={article_link} target=\"_blank\" rel=\"noopener noreferrer\">Official Press Release</a>\n                  </div>\n                </div>\n                <hr />\n                  <Link to=\"/\" className=\"btn btn-secondary\">Back To Mission List</Link>\n                </div>\n\n                <div className=\"card mb-3\">\n                  <h4 className=\"card-header\">Official Mission Patch</h4>\n                  <div className=\"card-body\">\n                    <img className=\"img-thumbnail\" src={mission_patch_small} />\n                  </div>\n                </div>\n                </div>\n                </div>\n              </div>\n            );\n            }\n          }\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Launch\n","import React, { Component } from 'react';\nimport logo from './spacex-logo.jpg';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Launches from './components/launches';\nimport Launch from './components/launch';\nimport './App.css';\n\nconst client = new ApolloClient({\n    uri: '/graphql'\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"container\">\n            <a href=\"/\"><img src={logo} alt=\"SpaceX\" style={{ width: 300, display: 'block', margin: 'auto' }} /></a>\n            <Route exact path=\"/\" component= {Launches} />\n            <Route exact path=\"/launch/:flight_number\" component= {Launch} />\n          </div>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}